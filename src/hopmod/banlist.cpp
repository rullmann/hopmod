#include "banned_networks.hpp"
#include <stdlib.h>
#include <iostream>

bool write_banlist(const banned_networks * bannedips, const char * filename)
{
    FILE * file = fopen(filename, "w");
    if(!file) return false;
    
    fputs("# -- PLAYER BAN LIST --\n", file);
    fputs("# WARNING: DO NOT EDIT THIS FILE WHILE THE SERVER IS RUNNING.\n\n", file);
    
    std::vector<netmask> bans = bannedips->get_permanent_bans();
    for(std::vector<netmask>::iterator it = bans.begin(); it != bans.end(); ++it)
    {
        fputs(it->to_string().c_str(), file);
        fputs("\n", file);
    }
    
    fclose(file);
    return true;
}

bool load_banlist(const char * filename, banned_networks * bannedips)
{
    FILE * file = fopen(filename, "r");
    if(!file) return false;
    char line[96];
    int lcount = 0;
    
    while(!feof(file) && !ferror(file))
    {
        char * readline = fgets(line, sizeof(line)-1, file);
        if(!readline) continue;
        lcount++;
        readline += strspn(line," \t");
        if(readline[0]=='#' || readline[0]=='\0' || readline[0]=='\n') continue;
        char * end = readline + strcspn(readline," \t\n");
        *end = '\0';
        
        netmask addr;
        try
        {
            addr = netmask::make(readline);
        }
        catch(std::bad_cast)
        {
            std::cerr<<"Bad entry in "<<filename<<" on line "<<lcount<<"."<<std::endl;
        }
        
        bannedips->set_permanent_ban(addr);
    }
    
    fclose(file);
    return true;
}
